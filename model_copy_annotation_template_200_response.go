/*
Aifs api

aifs api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CopyAnnotationTemplate200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyAnnotationTemplate200Response{}

// CopyAnnotationTemplate200Response struct for CopyAnnotationTemplate200Response
type CopyAnnotationTemplate200Response struct {
	// annotation template id of the copied annotation template
	AnnotationTemplateId *string `json:"annotationTemplateId,omitempty"`
}

// NewCopyAnnotationTemplate200Response instantiates a new CopyAnnotationTemplate200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyAnnotationTemplate200Response() *CopyAnnotationTemplate200Response {
	this := CopyAnnotationTemplate200Response{}
	return &this
}

// NewCopyAnnotationTemplate200ResponseWithDefaults instantiates a new CopyAnnotationTemplate200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyAnnotationTemplate200ResponseWithDefaults() *CopyAnnotationTemplate200Response {
	this := CopyAnnotationTemplate200Response{}
	return &this
}

// GetAnnotationTemplateId returns the AnnotationTemplateId field value if set, zero value otherwise.
func (o *CopyAnnotationTemplate200Response) GetAnnotationTemplateId() string {
	if o == nil || IsNil(o.AnnotationTemplateId) {
		var ret string
		return ret
	}
	return *o.AnnotationTemplateId
}

// GetAnnotationTemplateIdOk returns a tuple with the AnnotationTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyAnnotationTemplate200Response) GetAnnotationTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.AnnotationTemplateId) {
		return nil, false
	}
	return o.AnnotationTemplateId, true
}

// HasAnnotationTemplateId returns a boolean if a field has been set.
func (o *CopyAnnotationTemplate200Response) HasAnnotationTemplateId() bool {
	if o != nil && !IsNil(o.AnnotationTemplateId) {
		return true
	}

	return false
}

// SetAnnotationTemplateId gets a reference to the given string and assigns it to the AnnotationTemplateId field.
func (o *CopyAnnotationTemplate200Response) SetAnnotationTemplateId(v string) {
	o.AnnotationTemplateId = &v
}

func (o CopyAnnotationTemplate200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyAnnotationTemplate200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnnotationTemplateId) {
		toSerialize["annotationTemplateId"] = o.AnnotationTemplateId
	}
	return toSerialize, nil
}

type NullableCopyAnnotationTemplate200Response struct {
	value *CopyAnnotationTemplate200Response
	isSet bool
}

func (v NullableCopyAnnotationTemplate200Response) Get() *CopyAnnotationTemplate200Response {
	return v.value
}

func (v *NullableCopyAnnotationTemplate200Response) Set(val *CopyAnnotationTemplate200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyAnnotationTemplate200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyAnnotationTemplate200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyAnnotationTemplate200Response(val *CopyAnnotationTemplate200Response) *NullableCopyAnnotationTemplate200Response {
	return &NullableCopyAnnotationTemplate200Response{value: val, isSet: true}
}

func (v NullableCopyAnnotationTemplate200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyAnnotationTemplate200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


